name: dlfcn-install

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        arch: [native]
        python-version: "3.8"
      fail-fast: false
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - if: ${{ matrix.os == 'ubuntu-latest'}}
      name: Macos or Linux
      run: |
        set -xe
        python .github/workflows/get_env.py
        source .github/workflows/set_virtual_env.sh
        printenv

    - if: ${{ matrix.os == 'macos-latest'}}
      name: Macos or Linux
      run: |
        set -xe
        python .github/workflows/get_env_mac.py
        source .github/workflows/set_virtual_env.sh
        printenv    

    - if: ${{ matrix.os == 'windows-latest'}}
      name: Windows
      run: |
        python .github/workflows/get_env.py
        .github/workflows/set_virtual_env.ps1
        dir Env:   


    # - uses: actions/checkout@master
    #   with:
    #     name: dlfcn-win32/dlfcn-win32
    #     ref: refs/heads/release
    
    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: ${{ matrix.python-version }}

    # - uses: awvwgk/setup-fortran@main
    #   id: setup-fortran
    #   with:
    #     compiler: gcc
    #     version: 11

    # - run: gcc -v -o hello.exe hello.c

    # - name: Setup gfortran
    #   run: |
    #     # this is taken verbatim from the numpy azure pipeline setup.
    #     set -xe
    #     # same version of gfortran as the open-libs and numpy-wheel builds
    #     curl -L https://github.com/MacPython/gfortran-install/raw/master/archives/gfortran-4.9.0-Mavericks.dmg -o gfortran.dmg
    #     GFORTRAN_SHA256=$(shasum -a 256 gfortran.dmg)
    #     KNOWN_SHA256="d2d5ca5ba8332d63bbe23a07201c4a0a5d7e09ee56f0298a96775f928c3c4b30  gfortran.dmg"
    #     if [ "$GFORTRAN_SHA256" != "$KNOWN_SHA256" ]; then
    #         echo sha256 mismatch
    #         exit 1
    #     fi
    #     hdiutil attach -mountpoint /Volumes/gfortran gfortran.dmg
    #     sudo installer -pkg /Volumes/gfortran/gfortran.pkg -target /
    #     otool -L /usr/local/gfortran/lib/libgfortran.3.dylib
    #     # Manually symlink gfortran-4.9 to plain gfortran for f2py.
    #     # No longer needed after Feb 13 2020 as gfortran is already present
    #     # and the attempted link errors. Keep this for future reference.
    #     # ln -s /usr/local/bin/gfortran-4.9 /usr/local/bin/gfortran

    # - run: |
    #     curl -LJO https://github.com/fxcoudert/gfortran-for-macOS/releases/download/12.1-monterey/gfortran-Intel-12.1-Monterey.dmg
    #     hdiutil attach gfortran-Intel-12.1-Monterey.dmg
    #     sudo installer -package /Volumes/gfortran-Intel-12.1-Monterey/gfortran-Intel-12.1-Monterey/gfortran.pkg -target /
    #     sudo hdiutil detach /Volumes/gfortran-Intel-12.1-Monterey
    # - run: |    
    #     which gfortran
    #     gfortran --version
    #     ls /usr/local/gfortran/bin
    #     export PATH=$PATH:/usr/local/gfortran/bin
    #     which gfortran  

    # - uses: actions/checkout@v3
    #   with:
    #     submodules: true

    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - uses: awvwgk/setup-fortran@main
    #   id: setup-fortran
    #   with:
    #     compiler: gcc
    #     version: 11
    # - run: python -m pip install --upgrade pip
    # - run: python -m pip install cmake
    # - run: curl -L