name: Test_of_matrix

on:
  workflow_dispatch:


env:
  matrix1:
    os: [ubuntu-latest, windows-latest, macos-latest]
    arch: [native, aarch64, universal2]
    py: [cp36, cp37, cp38, cp39, cp310]

  matrix2:
    os: [ubuntu-latest]
    arch: [native]
    py: [cp39]  



jobs:

  # choose_matrix:
  #   name: Choose matrix based on something
  #   runs-on: ubuntu-latest

  #   steps:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]


  build:
    name: Wheel for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: $${{ env.matrix2 }}
    env:
      PYTEST_COMMAND: pytest --pyargs MCEq
      PYTEST_COMMAND_AARCH64: >
        cd {package}/MCEq/tests &&
        pytest test_densities.py test_msis.py

    steps:
      - name: Sets command for testing for aarch64
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "CIBW_TEST_COMMAND=${{ env.PYTEST_COMMAND_AARCH64 }}" >> $GITHUB_ENV

      - name: Sets command for testing for other cases
        if: ${{ !(matrix.os == 'ubuntu-latest') }}
        run: |
          echo "CIBW_TEST_COMMAND=${{ env.PYTEST_COMMAND }}" >> $GITHUB_ENV
        shell: bash
        
      - name: Print CIBW_TEST_COMMAND
        run: |
          echo "${{ env.CIBW_TEST_COMMAND }}"
        shell: bash  